@model Asklepios.Web.Areas.AdministrativeArea.Models.PatientsManageViewModel
@{
    SelectList medicalPackagesList = new SelectList(Model.MedicalPackages, "Id", "Name");
    SelectList nfzUnits = new SelectList(Model.NFZUnits, "Id", "Description");
    //Model.Person.HasPolishCitizenship = true;

}

<div class="d-flex flex-column">

    <form class="form my-2" asp-action="PatientItemsManage" method="post">
        <div class="form-group d-flex flex-column">

            <label asp-for="SelectedAglomeration" class="control-label"></label>
            <select class="form-control  mb-2" asp-for="SelectedAglomeration" asp-items="Html.GetEnumSelectList<Asklepios.Core.Enums.Aglomeration>()">
                <option value="">Wybierz aglomerację</option>
            </select>
            <span asp-validation-for="SelectedAglomeration" class="text-danger"></span>

            <label asp-for="SelectedMedicalPackageId" class="control-label"></label>
            <select class="form-control  mb-2" asp-for="SelectedMedicalPackageId" asp-items="medicalPackagesList">
                <option value="-1">Wybierz pakiet</option>
            </select>
            <span asp-validation-for="SelectedMedicalPackageId" class="text-danger"></span>

            <label asp-for="SelectedNFZUnitId" class="control-label"></label>
            <select class="form-control  mb-2" asp-for="SelectedNFZUnitId" asp-items="nfzUnits">
                <option value="-1">Wybierz oddział NFZ</option>
            </select>
            <span asp-validation-for="SelectedNFZUnitId" class="text-danger"></span>

            <label asp-for="SelectedGender" class="control-label"></label>
            <select class="form-control  mb-2" asp-for="SelectedGender" asp-items="Html.GetEnumSelectList<Asklepios.Core.Enums.Gender>()">
                <option value="">Wybierz płeć</option>
            </select>
            <span asp-validation-for="SelectedGender" class="text-danger"></span>


            <label asp-for="SelectedId" class="control-label"></label>
            <input asp-for="SelectedId" class="form-control mb-2">
            <span asp-validation-for="SelectedId" class="text-danger"></span>

            <label asp-for="SelectedName" class="control-label"></label>
            <input asp-for="SelectedName" class="form-control mb-2">
            <span asp-validation-for="SelectedName" class="text-danger"></span>


            <label asp-for="SelectedSurname" class="control-label"></label>
            <input asp-for="SelectedSurname" class="form-control mb-2">
            <span asp-validation-for="SelectedSurname" class="text-danger"></span>

            @*<div class="d-flex flex-row">
                    <label asp-for="HasPolishCitizenship"></label>
                    <input type="checkbox" asp-for="HasPolishCitizenship" class="custom-control ml-2 " style="height:20px;width:20px" checked />
                    <span asp-validation-for="HasPolishCitizenship" class="text-danger"></span>
                </div>*@


            <label asp-for="SelectedPESEL" class="control-label"></label>
            <input asp-for="SelectedPESEL" class="form-control mb-2">
            <span asp-validation-for="SelectedPESEL" class="text-danger"></span>

            <label asp-for="SelectedPassportNumber" class="control-label"></label>
            <input asp-for="SelectedPassportNumber" class="form-control mb-2">
            <span asp-validation-for="SelectedPassportNumber" class="text-danger"></span>




            <button id="btnSubmit" type="submit" class="btn btn-primary w-100 mt-2">Wyszukaj</button>
        </div>
    </form>
    @{
        if (!string.IsNullOrWhiteSpace(Model.SuccessMessage))
        {
            <div class="messages" style="margin-top:10px;text-align:center">
                <p class="alert alert-success">
                    @Model.SuccessMessage
                </p>
            </div>
        }
        else if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
        {
            <div class="messages" style="margin-top: 10px; text-align: center ">
                <p class="alert alert-danger">
                    @Model.ErrorMessage
                </p>
            </div>

        }



        List<Patient> patients = Model.FilteredPatients;

        for (int i = 0; i < patients.Count; i++)
        {
            Patient patient = patients[i];
            Asklepios.Web.Areas.AdministrativeArea.Models.PatientDetailsViewModel model = new Asklepios.Web.Areas.AdministrativeArea.Models.PatientDetailsViewModel();
            if (Model is Asklepios.Web.Areas.AdministrativeArea.Interfaces.IPatientSearch iSearch)
            {
                model.UpdateWithSearch(iSearch);
            }
            model.CurrentPatient = patient;
            <partial name="_Patient" model="model" />
        }
        if (patients.Count == 0)
        {
            <div class="messages" style="margin-top: 10px; text-align: center ">
                <p class="alert alert-danger">
                    Brak pacjentów spełniających wymagania...
                </p>
            </div>

        }


    }

</div>