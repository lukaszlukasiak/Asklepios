@model Asklepios.Web.Areas.CustomerServiceArea.Models.BookVisitViewModel
@{
    ViewData["Title"] = "View";
}

<h1 style="text-align:center">
    Zarezerwuj wizytę
</h1>

<form asp-action="BookVisitConditions" method="post">

    <input asp-for="HasPredefinedMedicalWorker" value="@Model.HasPredefinedMedicalWorker" hidden />
    <input asp-for="HasPredefinedService" value="@Model.HasPredefinedService" hidden />
    <input asp-for="HasPredefinedCategory" value="@Model.HasPredefinedCategory" hidden />
    <input asp-for="HasPredefinedLocation" value="@Model.HasPredefinedLocation" hidden />
    <input asp-for="SelectedCategoryId" value="@Model.SelectedCategoryId" hidden />
    <input asp-for="SelectedLocationId" value="@Model.SelectedLocationId" hidden />
    <input asp-for="SelectedMedicalWorkerId" value="@Model.SelectedMedicalWorkerId" hidden />
    <input asp-for="SelectedServiceId" value="@Model.SelectedServiceId" hidden />
    <input asp-for="SelectedVisitId" value="@Model.SelectedVisitId" hidden />

    @{
        SelectList workersItems = null;
        if (long.TryParse(Model.SelectedMedicalWorkerId, out long swid))
        {
            if (swid > 0)
            {
                workersItems = new SelectList(Model.AllMedicalWorkers.Where(c => c.Id == swid), "Id", "FullProffesionalName");
            }
            else
            {
                workersItems = new SelectList(Model.GetMedicalWorkers, "Id", "FullProffesionalName");
            }
        }
        else
        {
            workersItems = new SelectList(Model.GetMedicalWorkers, "Id", "FullProffesionalName");
        }
        SelectList locationItems = null;
        if (long.TryParse(Model.SelectedLocationId, out long slid))
        {
            if (slid > 0)
            {
                locationItems = new SelectList(Model.AllLocations.Where(c => c.Id == slid), "Id", "Name");
            }
        }
        else
        {
            locationItems = new SelectList(Model.GetLocations, "Id", "Name");
        }
        SelectList categoriesList = null;
        if (long.TryParse(Model.SelectedCategoryId, out long scid))
        {
            categoriesList = new SelectList(Model.AllCategories.Where(c => c.Id == scid), "Id", "CategoryName");
        }
        else
        {
            categoriesList = new SelectList(Model.GetVisitCategories, "Id", "CategoryName");
        }
        SelectList servicesList = null;
        if (long.TryParse(Model.SelectedServiceId, out long ssid))
        {
            servicesList = new SelectList(Model.AllMedicalServices.Where(c => c.Id == ssid), "Id", "Name");
        }
        else
        {
            servicesList = new SelectList(Model.GetMedicalServices, "Id", "Name");
        }
    }
    <select class="form-control  mb-1" asp-for="SelectedLocationId" asp-items="locationItems">
        <option value="0">Wybierz oddział</option>
    </select>

    <select class="form-control  mb-1" asp-for="SelectedCategoryId" asp-items="categoriesList">
        <option value="0">Wybierz kategorię wizyty</option>
    </select>
    <select class="form-control  mb-1" asp-for="SelectedServiceId" asp-items="servicesList">
        <option value="0">Wybierz usługę</option>
    </select>

    <select class="form-control mb-1" asp-for="SelectedMedicalWorkerId" asp-items="workersItems" onchange="">
        <option value="0">Wybierz lekarza</option>
    </select>
    <div class="d-flex flex-column">
        <button class=" btn btn-secondary   mb-1">Filtruj!</button>
    </div>

</form>
<div class="d-flex">
    <div class="form-group d-flex flex-column ">
        <button onclick="MovetToPreviousPage()" class="btn btn-primary btn-icon-split d-flex ">
            <span class="icon text-white-50 left" style="text-align:left;float:left">
                <i class="fas fa-arrow-left"></i>
            </span>
        </button>
    </div>

    <select class="form-control mx-2" asp-for="CurrentPageNum" asp-items="@Model.PagesList" onchange="document.getElementById('btnSubmit').click();" onselect="Refresh()">
    </select>

    <div class="form-group d-flex flex-column ">
        <button onclick="MoveToNextPage()" class="btn btn-primary btn-icon-split d-flex">
            <span class="icon text-white-50 left" style="text-align:left;float:left">
                <i class="fas fa-arrow-right"></i>
            </span>
        </button>
    </div>

</div>


@{
    List<Visit> visits = Model.PageVisits;
    if (visits.Count > 0)
    {
        @for (int i = 0; i < visits.Count; i++)
        {
            Visit visit = visits[i];
            <partial name="_AvailableVisit" model="visit" />
        }
    }
    else
    {
        <h3 style="text-align:center">Brak dostępnych wizyt przy założonych kryteriach...</h3>
    }
}
